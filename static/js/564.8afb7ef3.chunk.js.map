{"version":3,"file":"static/js/564.8afb7ef3.chunk.js","mappings":"6QAEaA,EAAaC,EAAAA,GAAAA,KAAH,gGAOVC,EAAQD,EAAAA,GAAAA,MAAH,2TAkBLE,EAASF,EAAAA,GAAAA,OAAH,8W,SChBnB,EATkB,SAAC,GAAkB,IAAhBG,EAAe,EAAfA,SACnB,OACE,UAACJ,EAAD,CAAYI,SAAUA,EAAtB,WACE,SAACF,EAAD,CAAOG,KAAK,OAAOC,KAAK,aAAaC,YAAY,uBACjD,SAACJ,EAAD,CAAQE,KAAK,SAAb,SAAsB,aAG3B,E,SCSD,EAhBmB,SAAC,GAAgB,IAAdG,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,wBACGF,EAAOG,KAAI,SAAAC,GAAK,OACf,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMP,GAAhD,SACGG,EAAMK,SAFFL,EAAME,GADA,KAStB,ECuBD,EAjCmB,WACjB,OAA4BI,EAAAA,EAAAA,UAAS,IAArC,eAAOV,EAAP,KAAeW,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAaF,EAAaG,IAAI,eAEpCC,EAAAA,EAAAA,YAAU,WACR,GAAIF,EAAY,CACd,IAAMG,EAAW,mCAAG,gHAEOC,EAAAA,EAAAA,IAAeJ,GAFtB,gBAERK,EAFQ,EAERA,KACRT,EAAUS,EAAKC,SAHC,qJAAH,qDAQjBH,GACD,CACF,GAAE,CAACH,IAQJ,OACE,4BACE,SAAC,EAAD,CAAWnB,SARM,SAAA0B,GACnBA,EAAMC,iBAENT,EAAgB,CAAEC,WAAYO,EAAME,OAAOC,SAASV,WAAWW,OAChE,KAKG,SAAC,EAAD,CAAY1B,OAAQA,MAGzB,C,+LCnCK2B,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACkBC,EAAAA,EAAAA,IAAA,wCAA2CF,IAD7D,cACCG,EADD,yBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BzB,GAA5B,yFACkBuB,EAAAA,EAAAA,IAAA,mBAAsBvB,EAAtB,oBAAoCqB,IADtD,uBACGP,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeY,EAAtB,+CAAO,OAAP,oBAAO,WAA6B1B,GAA7B,yFACkBuB,EAAAA,EAAAA,IAAA,mBAAsBvB,EAAtB,4BAA4CqB,IAD9D,uBACGP,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAea,EAAtB,+CAAO,OAAP,oBAAO,WAAgC3B,GAAhC,yFACkBuB,EAAAA,EAAAA,IAAA,mBAAsBvB,EAAtB,4BAA4CqB,IAD9D,uBACGP,EADH,EACGA,KADH,kBAEE,CAAEA,KAAAA,IAFJ,kEAKA,SAAeD,EAAtB,+CAAO,OAAP,oBAAO,WAA8Be,GAA9B,yFACkBL,EAAAA,EAAAA,IAAA,kCACMF,EADN,kBACuBO,EADvB,yBADlB,uBACGd,EADH,EACGA,KADH,kBAIE,CAAEA,KAAAA,IAJJ,kEAtBPS,EAAAA,EAAAA,SAAAA,QAAyB,4B","sources":["components/SearchBar.styled.jsx","components/SearchBar.jsx","components/MovieQuery.jsx","pages/MoviesPage/MoviesPage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  margin: 0;\n`;\n\nexport const Input = styled.input`\n  width: 300px;\n  height: 42px;\n  padding: 5px 10px;\n  border: 2px solid #094067;\n  font-size: 1.2rem;\n  color: #094067;\n  border-radius: 4px;\n  outline: none;\n  box-sizing: border-box;\n  margin-right: 10px;\n\n  &:focus {\n    border: 3px solid #0485e9;\n    color: #0485e9;\n  }\n`;\n\nexport const Button = styled.button`\n  width: 70px;\n  height: 42px;\n  border: 2px solid #094067;\n  background-color: #90b4ce;\n  color: #094067;\n  border-radius: 4px;\n  font-size: 17px;\n  font-weight: bold;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  &:hover {\n    cursor: pointer;\n    border: 3px solid #0485e9;\n    color: #0485e9;\n  }\n`;\n","import { SearchForm, Input, Button } from './SearchBar.styled';\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <SearchForm onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"searchWord\" placeholder=\"Search your movie\" />\n      <Button type=\"submit\">Search</Button>\n    </SearchForm>\n  );\n};\n\nexport default SearchBar;\n","import { Link, useLocation } from 'react-router-dom';\n\nconst MovieQuery = ({ movies }) => {\n  const location = useLocation();\n\n  return (\n    <ul>\n      {movies.map(movie => (\n        <li key={movie.id}>\n          <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n            {movie.title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default MovieQuery;\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { getMoviesQuery } from '../../services/api';\nimport SearchBar from '../../components/SearchBar';\nimport MovieQuery from '../../components/MovieQuery';\n\nconst MoviesPage = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const searchWord = searchParams.get('searchWord');\n\n  useEffect(() => {\n    if (searchWord) {\n      const fetchMovies = async () => {\n        try {\n          const { data } = await getMoviesQuery(searchWord);\n          setMovies(data.results);\n        } catch (error) {\n        } finally {\n        }\n      };\n      fetchMovies();\n    }\n  }, [searchWord]);\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    setSearchParams({ searchWord: event.target.elements.searchWord.value });\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={handleSubmit} />\n      <MovieQuery movies={movies} />\n    </div>\n  );\n};\n\nexport default MoviesPage;\n","import axios from 'axios';\n\nconst API_KEY = 'b5dbc40d665affe8ed0bac71106b3fa8';\naxios.defaults.baseURL = 'https://api.themoviedb.org';\n\nexport async function getTrendingMovies() {\n  const response = await axios.get(`/3/trending/movie/day?api_key=${API_KEY}`);\n  return response;\n}\n\nexport async function getMovieById(id) {\n  const { data } = await axios.get(`/3/movie/${id}?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMoviesCast(id) {\n  const { data } = await axios.get(`/3/movie/${id}/credits?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMoviesReviews(id) {\n  const { data } = await axios.get(`/3/movie/${id}/reviews?api_key=${API_KEY}`);\n  return { data };\n}\n\nexport async function getMoviesQuery(query) {\n  const { data } = await axios.get(\n    `/3/search/movie?api_key=${API_KEY}&query=${query}&include_adult=false`\n  );\n  return { data };\n}\n"],"names":["SearchForm","styled","Input","Button","onSubmit","type","name","placeholder","movies","location","useLocation","map","movie","to","id","state","from","title","useState","setMovies","useSearchParams","searchParams","setSearchParams","searchWord","get","useEffect","fetchMovies","getMoviesQuery","data","results","event","preventDefault","target","elements","value","API_KEY","getTrendingMovies","axios","response","getMovieById","getMoviesCast","getMoviesReviews","query"],"sourceRoot":""}